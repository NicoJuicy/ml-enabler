{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Parameters": {
        "GitSha": {
            "Type": "String",
            "Description": "GitSha to Deploy"
        },
        "StackName": {
            "Type": "String",
            "Description": "Name of parent stack"
        },
        "ImageTag": {
            "Type": "String",
            "Description": "ECR Image tag to deploy"
        },
        "MaxSize": {
            "Type": "Number",
            "Description": "Max number of TFServing Images"
        }
    },
    "Resources" : {
        "PredTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Port": 8501,
                "Protocol": "HTTP",
                "HealthCheckPath": "/v1/models/default",
                "VpcId": { "Fn::ImportValue": { "Fn::Join": [ "-", [
                    { "Ref": "StackName" },
                    "vpc"
                ]]}},
                "TargetType": "ip",
                "Matcher": {
                    "HttpCode": "200,202,302,304"
                }
            }
        },
        "PredHTTPListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [{
                    "Type": "forward",
                    "TargetGroupArn": { "Ref": "PredTargetGroup" }
                }],
                "LoadBalancerArn": { "Ref": "PredELB" },
                "Port": 80,
                "Protocol": "HTTP"
            }
        },
        "PredELB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": { "Ref": "AWS::StackName" },
                "Type": "application",
                "SecurityGroups": [{ "Ref": "PredELBSecurityGroup" }],
                "Subnets": [
                    { "Fn::ImportValue": { "Fn::Join": [ "-", [ { "Ref": "StackName" }, "suba" ]]}},
                    { "Fn::ImportValue": { "Fn::Join": [ "-", [ { "Ref": "StackName" }, "subb" ]]}}
                ]
            }
        },
        "PredELBSecurityGroup": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties": {
                 "GroupDescription": { "Fn::Join": [ "-", [
                    { "Ref": "StackName" },
                    "pred-elb-sg"
                 ]]},
                "SecurityGroupIngress": [{
                    "CidrIp": "0.0.0.0/0",
                    "IpProtocol": "tcp",
                    "FromPort": 80,
                    "ToPort": 80
                }],
                "VpcId": { "Fn::ImportValue": { "Fn::Join": [ "-", [
                    { "Ref": "StackName" },
                    "vpc"
                ]]}}
            }
        },

        "PredTileQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": { "Fn::Join": [ "-", [
                    { "Ref": "AWS::StackName" },
                    "queue"
                ]]},
                "VisibilityTimeout": 60,
                "RedrivePolicy": {
                    "deadLetterTargetArn": { "Fn::GetAtt": [ "PredDeadQueue", "Arn" ] },
                    "maxReceiveCount": 3
                }
            }
        },
        "PredDeadQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": { "Fn::Join": [ "-", [
                    { "Ref": "AWS::StackName" },
                    "dead-queue"
                ]]}
            }
        },
        "PredServiceSecurityGroup": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties": {
                 "GroupDescription": { "Fn::Join": [ "-", [
                    { "Ref": "StackName" },
                    "pred-ec2-sg"
                 ]]},
                "VpcId": { "Fn::ImportValue": { "Fn::Join": [ "-", [
                    { "Ref": "StackName" },
                    "vpc"
                ]]}},
                "SecurityGroupIngress": [{
                    "CidrIp": "0.0.0.0/0",
                    "IpProtocol": "tcp",
                    "FromPort": 8501,
                    "ToPort": 8501
                }]
            }
        },
        "PredServiceScalingRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["application-autoscaling.amazonaws.com"]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Path": "/",
                "Policies": [{
                    "PolicyName": "service-autoscaling",
                    "PolicyDocument": {
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "application-autoscaling:*",
                                "cloudwatch:DescribeAlarms",
                                "cloudwatch:PutMetricAlarm",
                                "ecs:DescribeServices",
                                "ecs:UpdateService"
                            ],
                            "Resource": "*"
                        }]
                    }
                }]
            }
        },
        "PredServiceScalingTarget": {
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
            "Properties": {
                "MaxCapacity": { "Ref": "MaxSize" },
                "MinCapacity": 1,
                "ResourceId": { "Fn::Join": ["", [
                    "service/",
                    { "Ref": "StackName" }, "-cluster/",
                    { "Fn::GetAtt": [ "PredService", "Name" ] }
                ]]},
                "RoleARN": { "Fn::GetAtt": [ "PredServiceScalingRole", "Arn" ]},
                "ScalableDimension": "ecs:service:DesiredCount",
                "ServiceNamespace": "ecs"
            }
        },
        "PredServiceScaling": {
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "Properties": {
                "PolicyName": { "Fn::Join": [ "-" , [{ "Ref": "AWS::StackName" }, "autoscale" ]]},
                "PolicyType": "TargetTrackingScaling",
                "ScalingTargetId": { "Ref": "PredServiceScalingTarget" },
                "TargetTrackingScalingPolicyConfiguration": {
                    "DisableScaleIn": false,
                    "TargetValue": 80,
                    "ScaleInCooldown": 60,
                    "ScaleOutCooldown": 60,
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
                    }
                }
            }
        },
        "PredService": {
            "Type": "AWS::ECS::Service",
            "DependsOn": "PredHTTPListener",
            "Properties": {
                "ServiceName": { "Ref": "ImageTag" },
                "Cluster": { "Fn::ImportValue": { "Fn::Join": [ "-", [
                    { "Ref": "StackName" },
                    "cluster"
                ]]}},
                "TaskDefinition": { "Ref": "PredTaskDefinition" },
                "LaunchType": "FARGATE",
                "DesiredCount": 1,
                "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                        "AssignPublicIp": "ENABLED",
                        "SecurityGroups": [{ "Ref": "PredServiceSecurityGroup" }],
                        "Subnets": [
                            { "Fn::ImportValue": { "Fn::Join": [ "-", [ { "Ref": "StackName" }, "suba" ]]}},
                            { "Fn::ImportValue": { "Fn::Join": [ "-", [ { "Ref": "StackName" }, "subb" ]]}}
                        ]
                    }
                },
                "LoadBalancers": [{
                    "ContainerName": "pred-app",
                    "ContainerPort": 8501,
                    "TargetGroupArn": { "Ref": "PredTargetGroup" }
                }]
            }
        },
        "PredTaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "Family": { "Ref" : "ImageTag" },
                "Cpu": 1024,
                "Memory": 2048,
                "NetworkMode": "awsvpc",
                "RequiresCompatibilities": ["FARGATE"],
                "TaskRoleArn": { "Fn::GetAtt" : [ "PredTaskRole", "Arn" ] },
                "ExecutionRoleArn": { "Fn::GetAtt" : [ "PredExecRole", "Arn" ] },
                "ContainerDefinitions": [{
                    "Name": "pred-app",
                    "Image": { "Fn::Join" : [ "", [
                        { "Ref": "AWS::AccountId" },
                        ".dkr.ecr.",
                        { "Ref": "AWS::Region" },
                        ".amazonaws.com/",
                        { "Ref": "StackName" },
                        "-ecr:",
                        { "Ref": "ImageTag" }
                    ] ] },
                    "PortMappings": [{
                        "ContainerPort": 8501
                    }],
                    "Environment": [],
                    "LogConfiguration": {
                        "LogDriver": "awslogs",
                        "Options": {
                            "awslogs-group": { "Fn::Join": [ "-", [
                                "awslogs",
                                { "Ref": "StackName" }
                            ]]},
                            "awslogs-region": { "Ref": "AWS::Region" },
                            "awslogs-stream-prefix": { "Fn::Join": [ "-", [
                                "awslogs",
                                { "Ref": "StackName" },
                                "pred"
                            ]]},
                            "awslogs-create-group": true
                        }
                    },
                    "Essential": true
                }]
            }
        },
        "PredTaskRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Path": "/service-role/"
            }
        },
        "PredExecRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Policies": [{
                    "PolicyName": "ml-enabler-pred-logging",
                    "PolicyDocument": {
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams"
                            ],
                            "Resource": [ "arn:aws:logs:*:*:*" ]
                        }]
                    }
                }],
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
                    "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
                ],
                "Path": "/service-role/"
            }
        }
    },
    "Outputs" : {
        "API": {
            "Description": "API URL",
            "Value": { "Fn::Join": ["", ["http://", { "Fn::GetAtt": ["PredELB", "DNSName"]}]]}
        }
    }
}
